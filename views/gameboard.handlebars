<div class="container">
    <div class="row">
        <div class="col-md-9">
            <table>
                <tbody>
                    <tr>
                        <td id="0">0</td>
                        <td id="1">1</td>
                        <td id="2">2</td>
                        <td id="3">3</td>
                        <td id="4">4</td>
                    </tr>
                    <tr>
                        <td id="5">5</td>
                        <td id="6">6</td>
                        <td id="7">7</td>
                        <td id="8">8</td>
                        <td id="9">9</td>
                    </tr>
                    <tr>
                        <td id="10">10</td>
                        <td id="11">11</td>
                        <td id="12">12</td>
                        <td id="13">13</td>
                        <td id="14">14</td>
                    </tr>
                    <tr>
                        <td id="15">15</td>
                        <td id="16">16</td>
                        <td id="17">17</td>
                        <td id="18">18</td>
                        <td id="19">19</td>
                    </tr>
                    <tr>
                        <td id="20">20</td>
                        <td id="21">21</td>
                        <td id="22">22</td>
                        <td id="23">23</td>
                        <td id="24">24</td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div id="player-col" class="col-md-3">
            <div class="player-card-top">
                <div>
                    <h2>Player: <span class="player-num"></span></h2>
                    <h5>Current turn: Player <span class="player-turn"></span></h5>
                    <h5>Moves: <span class="player-moves"></span></h5>
                    <button class="btn" id="end-turn">End Turn</button>
                </div>
            </div>
        </div>
    </div>
    <a href="/logout">Logout</a>
</div>

<div>

    <!-- Modal -->
    <div class="modal fade bd-example-modal-lg" id="playerSelectModelId" tabindex="-1" role="dialog"
        aria-labelledby="myLargeModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role=" document">
            <div class="modal-content">
                <div class="modal-body">
                    <div class="container-fluid">
                        <div class="heading">
                            <h1>Choose a Character:</h1>
                        </div>
                        <hr>
                        <div id="container-character">
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                            <button type="button" class="btn btn-primary">Save changes</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <button type="submit" class="btn btn-primary submit">Select Player</button>
</div>

<script src="/socket.io/socket.io.js"></script>
<script src="https://code.jquery.com/jquery-1.11.1.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
<script src="/js/select.js"></script>
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">
<script>
    $(function () {
        var socket = io();
        var playerNum;
        $("#end-turn").hide();

        $.get("/api/players", function (data) {
            playerNum = data.length;
            $(".player-num").text(playerNum);
            console.log(data.length);
            if (data.length === 4) {
                console.log("start 0");
                socket.emit("startGame", data);
            }
        });

        socket.on("startGame", function (playerData) {
            console.log(playerData);
            $.get("/api/board", function (data) {
                for (var i = 0; i < playerData.length - 1; i++) {
                    var newPlayerDiv = $("<div>");
                    newPlayerDiv
                        .addClass("player" + playerData[4][i] + "card")
                        .addClass("player-card")
                        .attr("id", "player-card-" + playerData[4][i])

                    if (i === 0) {
                        newPlayerDiv.addClass("turn-active-card");
                    }
                    newPlayerDiv.append("<h5>Player " + playerData[4][i] + "</h5>");
                    newPlayerDiv.append("<p>Score: 0</p>");
                    $("#player-col").append(newPlayerDiv);
                }

                board = JSON.parse(data[0].boardSpots);
                var boardSpot = [];
                console.log(board);

                $(".validMove").removeClass("validMove");
                $(".hasPlayer").removeClass("hasPlayer");
                $(".hasItem").removeClass("hasItem");

                for (var i = 0; i < board.spots.length; i++) {
                    if (board.spots[i].hasItem) {
                        $("#" + i).addClass("hasItem");
                    }
                    if (board.spots[i].hasPlayer) {
                        $("#" + i).addClass("hasPlayer");
                        switch (board.spots[i].playerId) {
                            case 1:
                                $("#" + i).addClass("player1");
                                break;
                            case 2:
                                $("#" + i).addClass("player2");
                                break;
                            case 3:
                                $("#" + i).addClass("player3");
                                break;
                            case 4:
                                $("#" + i).addClass("player4");
                                break;
                        }

                        console.log(board.spots[i].playerId + ", " + parseInt(playerData[4][0]))

                        if (board.spots[i].playerId === parseInt(playerData[4][0])) {
                            boardSpot = board.spots[i].validMoves;
                        }
                    }
                }
                $("#end-turn").hide();
                $(".player-turn").text(playerData[4][0]);
                changeTurn(parseInt(playerData[4][0]), boardSpot);
            });
        });

        function changeTurn(turn, boardSpot) {
            console.log(
                "Current turn: " + turn + ", Your player num: " + playerNum
            );
            if (turn === playerNum) {
                for (var i = 0; i < boardSpot.length; i++) {
                    if (!$("#" + boardSpot[i]).hasClass("hasPlayer")) {
                        $("#" + boardSpot[i]).addClass("validMove");
                    }
                }
                $("#end-turn").show();
                console.log("your turn");
            }
        }

        $(document).on("click", ".validMove", function () {
            var newLocation = parseInt($(this).attr("id"));
            var newBoardState = { newPosition: newLocation, playerId: playerNum };
            $.ajax("/api/board", {
                type: "PUT",
                data: newBoardState,
                success: function (data) {
                    console.log(data);
                    socket.emit("playerMove", playerNum);
                }
            });
        });

        socket.on("startTurn", function (turn) {
            $(".turn-active-card").removeClass("turn-active-card");
            $("#player-card-" + turn).addClass("turn-active-card");
            $.get("/api/board", function (data) {
                board = JSON.parse(data[0].boardSpots);
                var boardSpot = [];
                console.log(board);

                $(".validMove").removeClass("validMove");
                $(".hasPlayer").removeClass("hasPlayer");
                $(".player" + turn).removeClass("player" + turn);
                $(".hasItem").removeClass("hasItem");

                for (var i = 0; i < board.spots.length; i++) {
                    if (board.spots[i].hasItem) {
                        $("#" + i).addClass("hasItem");
                    }
                    if (board.spots[i].hasPlayer) {
                        $("#" + i).addClass("hasPlayer");

                        if (board.spots[i].playerId === turn) {
                            $("#" + i).addClass("player" + turn);
                            boardSpot = board.spots[i].validMoves;
                        }
                    }
                }
                $("#end-turn").hide();
                $(".player-turn").text(turn);
                changeTurn(turn, boardSpot);
            });
        });

        $("#end-turn").click(function () {
            socket.emit("endTurn", playerNum);
        });
    });
</script>